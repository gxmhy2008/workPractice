<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
       xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
       xmlns:context="http://www.springframework.org/schema/context"
       xmlns:aop="http://www.springframework.org/schema/aop" xmlns:mvc="http://www.springframework.org/schema/mvc"
       xmlns:task="http://www.springframework.org/schema/task"
       xsi:schemaLocation="
        http://www.springframework.org/schema/beans 
        http://www.springframework.org/schema/beans/spring-beans-4.2.xsd        
        http://www.springframework.org/schema/context 
        http://www.springframework.org/schema/context/spring-context-4.2.xsd
     	http://www.springframework.org/schema/aop 
     	http://www.springframework.org/schema/aop/spring-aop-4.2.xsd
		http://www.springframework.org/schema/mvc 
     	http://www.springframework.org/schema/mvc/spring-mvc-4.2.xsd
        http://www.springframework.org/schema/task
        http://www.springframework.org/schema/task/spring-task-4.2.xsd">

    <!-- 自动扫描包 -->
    <context:component-scan base-package="com.gxm.workPractice.cms.controller" />
    <context:component-scan base-package="com.gxm.workPractice.cms.common.aspect" />
    <context:component-scan base-package="com.gxm.workPractice.cms.util.utils" />

    <!--配置http消息转换器,用于消息到后台对象,后台对象到消息的绑定转换,
        fastjson转换器对后台传送的null结果处理如下:
        字符串类型的值如果是null就返回""，数值类型的如果是null就返回0
    -->
    <mvc:annotation-driven>
        <mvc:message-converters>
            <bean class="com.alibaba.fastjson.support.spring.FastJsonHttpMessageConverter">
                <property name="supportedMediaTypes">
                    <list>
                        <value>text/html;charset=UTF-8</value>
                        <value>application/json</value>
                    </list>
                </property>
                <property name="fastJsonConfig" ref="messageConverterFastJsonCfg"/>
            </bean>
        </mvc:message-converters>
    </mvc:annotation-driven>

    <!--加载spring注解配置的quartz定时任务-->
    <task:annotation-driven/>

    <!--swagger配置-->
    <bean class="com.gxm.workPractice.cms.common.swagger.Swagger"></bean>
    <!-- 配置swagger资源不被拦截 -->
    <mvc:resources location="classpath:/META-INF/resources/" mapping="swagger-ui.html"/>
    <mvc:resources location="classpath:/META-INF/resources/webjars/" mapping="/webjars/**"/>

    <!--支持跨域请求-->
    <mvc:cors>
        <mvc:mapping path="/**"/>
    </mvc:cors>

    <!-- fastjson配置 -->
    <bean id="messageConverterFastJsonCfg" class="com.alibaba.fastjson.support.config.FastJsonConfig">
        <property name="serializerFeatures">
            <list>
                <value>WriteMapNullValue</value>
                <value>QuoteFieldNames</value>
                <value>WriteDateUseDateFormat</value>
                <!-- 禁用fastjson循环引用检测 -->
                <value>DisableCircularReferenceDetect</value>
            </list>
        </property>
    </bean>

    <!-- Thymeleaf视图解析器 默认视图 -->
    <bean id="templateResolver" class="org.thymeleaf.spring4.templateresolver.SpringResourceTemplateResolver">
        <property name="prefix" value="/WEB-INF/view/"/>
        <property name="suffix" value=".html"/>
        <property name="templateMode" value="HTML"/>
        <property name="cacheable" value="false"/>
        <property name="characterEncoding" value="UTF-8"/>
    </bean>
    <bean id="templateEngine" class="org.thymeleaf.spring4.SpringTemplateEngine">
        <property name="templateResolver" ref="templateResolver"/>
        <property name="enableSpringELCompiler" value="true"/>
    </bean>
    <bean class="org.thymeleaf.spring4.view.ThymeleafViewResolver">
        <property name="templateEngine" ref="templateEngine"/>
        <property name="characterEncoding" value="UTF-8"/>
    </bean>

    <!-- 配置静态资源，直接映射到对应的文件夹，DispatcherServlet 不处理 -->
    <mvc:resources mapping="/static/**" location="/WEB-INF/static/" />

    <!--文件上传配置-->
    <bean id="multipartResolver"
          class="org.springframework.web.multipart.commons.CommonsMultipartResolver">
        <property name="maxUploadSize" value="1000000000"/>
    </bean>

    <!--验证器-->
    <bean id="validator" class="org.springframework.validation.beanvalidation.LocalValidatorFactoryBean">
        <!--注入hibernate的验证器-->
        <property name="providerClass"  value="org.hibernate.validator.HibernateValidator"/>
    </bean>
    <bean id="propertyConfigurer" class="org.springframework.beans.factory.config.PropertyPlaceholderConfigurer">
        <property name="locations">
            <list>
                <value>classpath:properties/*.properties</value>
            </list>
        </property>
    </bean>
</beans>